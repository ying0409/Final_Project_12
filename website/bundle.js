(function (vega, vegaLite, vl, vegaTooltip, d3) {
  'use strict';

  vega = vega && Object.prototype.hasOwnProperty.call(vega, 'default') ? vega['default'] : vega;
  vegaLite = vegaLite && Object.prototype.hasOwnProperty.call(vegaLite, 'default') ? vegaLite['default'] : vegaLite;
  vl = vl && Object.prototype.hasOwnProperty.call(vl, 'default') ? vl['default'] : vl;

  // Appearance customization to improve readability.
  // See https://vega.github.io/vega-lite/docs/
  const dark = '#3e3c38';
  const config = {
    axis: {
      domain: false,
      tickColor: 'lightGray'
    },
    style: {
      "guide-label": {
        fontSize: 20,
        fill: dark
      },
      "guide-title": {
        fontSize: 15,
        fill: dark
      }
    }
  };

  const csvUrl = 'https://raw.githubusercontent.com/angelalien/Cloud-Native-final-project-website/main/data.csv'; 
  const getData = async () => {
    const data = await d3.csv(csvUrl);    
    //const data = await d3.csv('data.csv');
    
    // Have a look at the attributes available in the console!
    console.log(data[7]);
    
    return data;
  };

  const hover = vl.selectSingle("hover")
      .fields('Company')  // limit selection to x-axis value
      .on('mouseover') // select on mouseover events
      .nearest(true)   // select data point nearest the cursor
      .empty('none')
      .clear("mouseout").init({"Company": "dur"});

  const line = vl.markLine()
      .encode(
        vl
        .y()
        .fieldQ('Count')
        .title('Score'),
      vl
        .x()
        .fieldT('Date')
        .scale({ nice: false })
        .title('Date'),
      vl
        .color()
        .fieldN("Company").legend(null),
      vl.opacity()
        .if(hover,vl.value(1)).value(0.6),
      vl.strokeWidth().if(hover,vl.value(4)).value(2));
  const circle=
        vl.markCircle()
    .encode(
      vl
        .y()
        .fieldQ('Count')
        .title('Score'),
      vl
        .x()
        .fieldT('Date')
        .scale({nice: false })
        .title('Date'),
      vl
        .color()
        .fieldN("Company"),
      vl.opacity()
        .if(hover,vl.value(1)).value(0.6)
        .title('Signature'));

  const base = line.transform(vl.filter(hover));
  const label = {align: 'left', dx: 5, dy: -5};
  const white = {stroke: 'white', strokeWidth: 2};

  const viz =
    vl.layer(circle,
      line,
      line.markCircle()
          .select(hover) // use as anchor points for selection
          .encode(vl.opacity().if(hover, vl.value(1)).value(0)),   

      vl.markRule({color: '#aaa'})
          .transform(vl.filter(hover))
          .encode(vl.x().fieldT('date')),
      base.markText(label, white).encode(vl.text().fieldQ('Count')),
      base.markText(label).encode(vl.text().fieldQ('Count')));

  vl.register(vega, vegaLite, {
    view: { renderer: 'svg' },
    init: view => { view.tooltip(new vegaTooltip.Handler().call); }
  });

  const run = async () => {
    const marks = viz
      .data(await getData())
      .width(window.innerWidth*0.95)
      .height(window.innerHeight*0.7)
      .autosize({ type: 'fit', contains: 'padding' })
      .config(config);  
    
      document.body.appendChild(await marks.render());
  };
  run();

}(vega, vegaLite, vl, vegaTooltip, d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,